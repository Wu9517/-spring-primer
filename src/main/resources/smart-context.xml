<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!--1.扫描dao类包，将标注spring类注解的类自动转化为bean，同时完成bean的注入-->
    <context:component-scan base-package="com.smart.dao"/>
    <!--4.扫描service类包，应用spring的注解配置-->
    <context:component-scan base-package="com.smart.service"/>
    <!--6.扫描web包，应用spring的注解-->
    <context:component-scan base-package="com.smart.web"/>

    <!--使用自定义的EncryptPropertyPlaceholderConfigurer类来加载属性文件-->
    <bean class="com.smart.config.EncryptPropertyPlaceholderConfigurer"
          p:location="classpath:config.properties"
          p:fileEncoding="utf-8"/>


    <!-- 2.定义一个使用DBCP实现的数据源，destroy-method="close" 关闭资源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="${driverClassName}"
          p:url="${url}"
          p:username="${username}"
          p:password="${password}"/>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>il8n.resource</value>
            </list>
        </property>
    </bean>

    <!--3. 定义jdbc模板Bean-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>

    <!--5.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression="(execution(* com.smart.service..*(..))) and
                                         (@annotation(org.springframework.transaction.annotation.Transactional))"/>
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--7.配置视图解析器，将ModelAndView及字符串解析为具体的页面，给返回的视图名加上前缀和后缀,需要导入spring-webMVC的jar包-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:viewClass="org.springframework.web.servlet.view.JstlView"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"></bean>
</beans>